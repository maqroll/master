<!DOCTYPE html>
<meta charset="utf-8">
<title>Cubism.js</title>
<style>

@import url(//fonts.googleapis.com/css?family=Yanone+Kaffeesatz:400,700);
@import url(http://square.github.com/cubism/style.css);

#example1 { min-height: 155px; }
#example2a { min-height: 153px; }
#example2b { min-height: 255px; }

</style>
<div id="body">

<div id="example1"></div>

<div id="example2a"></div>

<div id="example2b"></div>

<script src="http://square.github.com/cubism/d3.v2.js"></script>
<script src="http://square.github.com/cubism/cubism.v1.js"></script>
<script>

function random(name) {
  var value = 0,
      values = [],
      i = 0,
      last;
  return context.metric(function(start, stop, step, callback) {
    console.log(start + ',' + stop + ',' + step);
    start = +start, stop = +stop;
    console.log(start + ',' + stop + ',' + step);
    if (isNaN(last)) last = start;
    while (last < stop) {
      last += step;
      value = Math.max(-10, Math.min(10, value + .8 * Math.random() - .4 + .2 * Math.cos(i += .2)));
      values.push(value);
    }
    console.log(values.slice((start - stop) / step));
    callback(null, values = values.slice((start - stop) / step));
  }, name);
};

function luis(expression) {
    return context.metric(function(start, stop, step, callback) {
    start = +start; //start = parseInt(start/1000);
    stop = +stop; //stop = parseInt(stop/1000);
      d3.json("http://localhost:8080/muestras"
          + "?start=" + start
          + "&stop=" + stop , function(data) {
        if (!data) return callback(new Error("unable to load data"));
        callback(null, data.map(function(d) { return (d.MSeconds != 0? d.Value: NaN); }));
      });
    }, expression += "");
};
</script>
<script>

var context = cubism.context()
    .serverDelay(0)
    .clientDelay(0)
    .step(1000)
    .size(960);

var foo = luis("foo"),
    bar = random("bar");

d3.select("#example1").call(function(div) {

// Añade un eje
  div.append("div")
      .attr("class", "axis")
      .call(context.axis().orient("top"));

// Añade los datos
  div.selectAll(".horizon")
//      .data([foo, bar, foo.add(bar), foo.subtract(bar)])
      .data([foo])
    .enter().append("div")
      .attr("class", "horizon")
     //.call(context.horizon().extent([-1, 1]))
      .call(context.horizon().extent([0,500]).height(30)/*.extent([0,200])*/);

// Añade la regla
  div.append("div")
      .attr("class", "rule")
      .call(context.rule());

});

/**
d3.select("#example2a").call(function(div) {
  div.datum(foo);

  div.append("div")
      .attr("class", "horizon")
      .call(context.horizon()
        .height(120)
        .mode("mirror")
        .colors(["#bdd7e7","#bae4b3"])
        .title("Area (120px)")
        .extent([-10, 10]));

  div.append("div")
      .attr("class", "horizon")
      .call(context.horizon()
        .height(30)
        .mode("mirror")
        .colors(["#bdd7e7","#bae4b3"])
        .title("Area (30px)")
        .extent([-10, 10]));
});

d3.select("#example2b").call(function(div) {
  div.datum(foo);

  div.append("div")
      .attr("class", "horizon")
      .call(context.horizon()
        .height(120)
        .colors(["#bdd7e7","#bae4b3"])
        .title("Horizon, 1-band (120px)")
        .extent([-10, 10]));

  div.append("div")
      .attr("class", "horizon")
      .call(context.horizon()
        .height(60)
        .colors(["#6baed6","#bdd7e7","#bae4b3","#74c476"])
        .title("Horizon, 2-band (60px)")
        .extent([-10, 10]));

  div.append("div")
      .attr("class", "horizon")
      .call(context.horizon()
        .height(40)
        .colors(["#3182bd","#6baed6","#bdd7e7","#bae4b3","#74c476","#31a354"])
        .title("Horizon, 3-band (40px)")
        .extent([-10, 10]));

  div.append("div")
      .attr("class", "horizon")
      .call(context.horizon()
        .height(30)
        .colors(["#08519c","#3182bd","#6baed6","#bdd7e7","#bae4b3","#74c476","#31a354","#006d2c"])
        .title("Horizon, 4-band (30px)")
        .extent([-10, 10]));

});
**/
// On mousemove, reposition the chart values to match the rule.
context.on("focus", function(i) {
  d3.selectAll(".value").style("right", i == null ? null : context.size() - i + "px");
});

</script>
